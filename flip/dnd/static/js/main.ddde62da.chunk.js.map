{"version":3,"sources":["hooks/DndProvider.tsx","hooks/useDrag.ts","hooks/useDrop.ts","components/Card/index.tsx","App.tsx","index.tsx"],"names":["DndContext","React","createContext","data","register","DndProvider","props","children","useState","setData","useCallback","Provider","value","useDrag","el","options","dragstart","dragend","drag","useContext","handleDragstart","e","dataTransfer","effectAllowed","dropEffect","handleDragEnd","handleDrag","useEffect","node","current","setAttribute","addEventListener","removeEventListener","useDrop","hover","drop","handleDragEnter","preventDefault","hanldeDragOver","handleDrop","useStyles","makeStyles","root","maxWidth","media","height","CharacterCard","index","move","img","name","classes","ref","useRef","isDraging","setIsDraging","dropIndex","dragIndex","dropRect","getBoundingClientRect","dropMiddY","bottom","top","dropY","pageY","mergeStyle","opacity","style","className","Card","CardActionArea","CardMedia","image","CardContent","Typography","variant","color","component","App","id","list","setList","map","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddde62da.chunk.js","sourcesContent":["import React, {\n  useState,\n  useCallback,\n} from 'react';\n\ntype DndContextProps = {\n  data: any;\n  register: (data: any) => void;\n}\n\nexport const DndContext = React.createContext<DndContextProps>({\n  data: null,\n  register: (data: any) => {}\n});\n\nconst DndProvider: React.FC = (props) => {\n  const { children } = props;\n\n  const [data, setData] = useState<any>(null);\n\n  const register = useCallback((data) => {\n    setData(data);\n  }, []);\n\n  return (\n    <DndContext.Provider\n      value={{\n        data,\n        register,\n      }}\n    >\n      { children }\n    </DndContext.Provider>\n  );\n};\n\nexport default DndProvider;\n","import { useEffect, useCallback, useContext, } from 'react';\nimport { DndContext } from './DndProvider';\n\ntype UseDragOptions = {\n  dragstart?: (e: globalThis.DragEvent) => void;\n  dragend?: (e: globalThis.DragEvent) => void;\n  drag?: (e: globalThis.DragEvent) => void;\n}\n\nconst useDrag = (el: React.RefObject<HTMLElement>, data: any, options?: UseDragOptions,) => {\n  const {\n    dragstart,\n    dragend,\n    drag,\n  } = options || {};\n\n  const { register } = useContext(DndContext);\n\n  const handleDragstart = useCallback((e: globalThis.DragEvent) => {\n    if (e.dataTransfer) {\n      e.dataTransfer.effectAllowed = 'copyMove'; \n      e.dataTransfer.dropEffect = 'move';\n      register(data);\n    }\n    if (dragstart) {\n      dragstart(e);\n    }\n  }, [data, dragstart, register]);\n\n  const handleDragEnd = useCallback((e: globalThis.DragEvent) => {\n    if (dragend) {\n      dragend(e);\n    }\n  }, [dragend]);\n\n  const handleDrag = useCallback((e: globalThis.DragEvent) => {\n    if (drag) {\n      drag(e);\n    }\n  }, [drag]);\n\n  useEffect(() => {\n    let node!: HTMLElement;\n    if (el.current) {\n      node = el.current;\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragstart);\n      node.addEventListener('dragend', handleDragEnd);\n      node.addEventListener('drag', handleDrag);\n    }\n    return () => {\n      if (node) {\n        node.removeEventListener('dragstart', handleDragstart);\n        node.removeEventListener('dragend', handleDragEnd);\n        node.removeEventListener('drag', handleDrag);\n      }\n    };\n  }, [el, handleDragstart, handleDragEnd, handleDrag]);\n};\n\nexport default useDrag;\n","import React, { useEffect, useCallback, useContext, } from 'react';\nimport { DndContext } from './DndProvider';\n\ntype UseDropOptions = {\n  hover?: (data: any, e: globalThis.DragEvent) => void;\n  drop?: (data: any, e: globalThis.DragEvent) => void;\n}\n\nconst useDrop = (el: React.RefObject<HTMLElement>, options?: UseDropOptions,) => {\n  const {\n    hover,\n    drop,\n  } = options || {};\n\n  const { data } = useContext(DndContext);\n\n  const handleDragEnter = useCallback((e: globalThis.DragEvent) => {\n    e.preventDefault();\n    if (hover) {\n      hover(data, e);\n    }\n  }, [hover, data]);\n\n  const hanldeDragOver = useCallback((e: globalThis.DragEvent) => {\n    e.preventDefault();\n    if (hover) {\n      hover(data, e);\n    }\n  }, [hover, data]);\n\n  const handleDrop = useCallback((e: globalThis.DragEvent) => {\n    e.preventDefault();\n    if (hover) {\n      hover(data, e);\n    }\n    if (drop) {\n      drop(data, e);\n    }\n  }, [hover, drop, data]);\n\n  useEffect(() => {\n    let node!: HTMLElement;\n    if (el.current) {\n      node = el.current;\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', hanldeDragOver);\n      node.addEventListener('drop', handleDrop);\n    }\n    return () => {\n      if (node) {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', hanldeDragOver);\n        node.removeEventListener('drop', handleDrop);\n      }\n    };\n  }, [el, handleDragEnter, hanldeDragOver, handleDrop, data]);\n};\n\nexport default useDrop;\n","import React, { useRef, useState } from 'react';\nimport useDrag from '../../hooks/useDrag';\nimport useDrop from '../../hooks/useDrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport './index.css';\n\ntype CharacterCardProps = {\n  index: number;\n  move: (dropIndex: number, dragIndex: number) => void;\n  img: string;\n  name: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst CharacterCard: React.FC<CharacterCardProps> = (props) => {\n  const {index, move, img, name } = props;\n  const classes = useStyles();\n\n  const ref = useRef<HTMLDivElement>(null)\n  const [isDraging, setIsDraging] = useState(false)\n\n  const hover = (data: any, e: globalThis.DragEvent) => {\n    const dropIndex = index;\n    const { index: dragIndex } = data;\n    if (dropIndex === dragIndex) {\n      return;\n    }\n    if (!ref.current) {\n      return;\n    }\n    const dropRect = ref.current?.getBoundingClientRect();\n    const dropMiddY = (dropRect.bottom - dropRect.top) / 2;\n    const dropY = e.pageY - dropRect.top;\n    if (dragIndex < dropIndex && dropY < dropMiddY) {\n      return\n    }\n    if (dragIndex > dropIndex && dropY > dropMiddY) {\n      return\n    }\n    move(dropIndex, dragIndex);\n    data.index = dropIndex;\n  };\n\n  useDrag(ref, { index }, {\n    dragstart: () => {\n      setIsDraging(true);\n    },\n    dragend: () => {\n      setIsDraging(false);\n    }\n  });\n  useDrop(ref, {\n    hover,\n  });\n\n  const mergeStyle: React.CSSProperties = {};\n  if (isDraging) {\n    mergeStyle.opacity = 0.4;\n  } else {\n    mergeStyle.opacity = 1;\n  }\n\n  return (\n    <div\n      ref={ref}\n      style={mergeStyle}\n      className=\"card\"\n    >\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={img}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              { name }\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n    \n  );\n};\n\nexport default CharacterCard;\n","import React, { useState, useCallback } from 'react';\nimport { Flip, Flips, } from 'react-flip-transition';\nimport Card from './components/Card';\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([{\n    id: 1,\n    name: '极光',\n    img: 'https://i.loli.net/2021/01/22/T3MkFLzjCgfGlKd.png',\n  }, {\n    id: 2,\n    name: '灯塔',\n    img: 'https://i.loli.net/2021/01/22/o4rkn82ANlhEfxc.png',\n  }, {\n    id: 3,\n    name: '银杏',\n    img: 'https://i.loli.net/2021/01/22/FUP4SNGXtB9edAE.png',\n  }, {\n    id: 4,\n    name: '海滩',\n    img: 'https://i.loli.net/2021/01/22/dxfuJCDTvXytU7G.png'\n  }]);\n\n  const move = useCallback((dropIndex: number, dragIndex: number) => {\n    const drop = list[dropIndex];\n    const drag = list[dragIndex];\n    list[dropIndex] = drag;\n    list[dragIndex] = drop;\n    setList([...list]);\n  }, [list]);\n\n  return (\n    <div className=\"App\">\n      <Flips\n        name=\"flip1\"\n      >\n        {\n          list.map((item, index) => {\n            return (\n              <Flip key={item.id}>\n                <div>\n                  <Card\n                    img={item.img}\n                    name={item.name}\n                    index={index}\n                    move={move}\n                  />\n                </div>\n              </Flip>\n            )\n          })\n        }\n      </Flips>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport DndProvider from './hooks/DndProvider';\n\nReactDOM.render(\n  <DndProvider>\n    <App />\n  </DndProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}